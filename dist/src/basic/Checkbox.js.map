{"version":3,"sources":["../../../src/basic/Checkbox.js"],"names":["CheckBox","variables","bgColor","props","color","checkboxBgColor","checkStyle","borderColor","backgroundColor","checked","defaultProps","style","getInitialStyle","context","theme","platformStyle","platform","_root","c","prepareRootProps","checkboxTickColor","fontSize","CheckboxFontSize","lineHeight","CheckboxIconSize","contextTypes","object","propTypes","oneOfType","number","array","bool","onPress","func","StyledCheckBox"],"mappings":"21BAAA,4B;AACA,qC;AACA;AACA,4D;AACA;AACA,mE;AACA,qD;AACA,mD;;AAEMA,Q;;;;;AAKWC,S,CAAW;AAC1B,GAAMC,SAAU,KAAKC,KAAL,CAAWC,KAAX,CAAmB,KAAKD,KAAL,CAAWC,KAA9B,CAAsCH,UAAUI,eAAhE;;AAEA,MAAO;AACNC,WAAY;AACXC,YAAa,KAAKJ,KAAL,CAAWC,KAAX,CAAmB,KAAKD,KAAL,CAAWC,KAA9B,CAAsCH,UAAUI,eADlD;AAEXG,gBAAiB,KAAKL,KAAL,CAAWM,OAAX,GAAuB,IAAvB,CAA8BP,OAA9B,CAAwC,aAF9C,CADN,CAAP;;;AAMA,C;;AAEgBD,S,CAAW;AAC3B,GAAMS,cAAe;AACpBC,MAAO,KAAKC,eAAL,CAAqBX,SAArB,EAAgCK,UADnB,CAArB;;;AAIA,MAAO,+BAAa,KAAKH,KAAlB,CAAyBO,YAAzB,CAAP;AACA,C;AACQ;AACR,GAAMT,WAAY,KAAKY,OAAL,CAAaC,KAAb,CAAqB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDb,SAAtE,mBAAlB;AACA,GAAMc,eAAgBd,UAAUc,aAAhC;AACA,GAAMC,UAAWf,UAAUe,QAA3B;AACA;AACC,sEAAkB,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAvB,EAAkD,KAAKC,gBAAL,CAAsBlB,SAAtB,CAAlD;AACC;AACC,MAAO;AACNG,MAAO,KAAKD,KAAL,CAAWM,OAAX,GAAuB,IAAvB,CAA8BR,UAAUmB,iBAAxC,CAA4D,aAD7D;AAENC,SAAUpB,UAAUqB,gBAFd;AAGNC,WAAYtB,UAAUuB,gBAHhB,CADR;;AAMC,KAAMR,WAAa,KAAb,EAAsBD,gBAAkB,UAAxC,CAAqD,uBAArD,CAA+E,cANtF,iDADD,CADD;;;;AAYA,C,wCAvCIf,Q,CACEyB,Y,CAAe,CACrBX,MAAO,oBAAUY,MADI,C;;;AAyCvB1B,SAAS2B,SAAT;AACI,8BAAiBA,SADrB;AAEChB,MAAO,oBAAUiB,SAAV,CAAoB,CAAC,oBAAUF,MAAX,CAAmB,oBAAUG,MAA7B,CAAqC,oBAAUC,KAA/C,CAApB,CAFR;AAGCrB,QAAS,oBAAUsB,IAHpB;AAICC,QAAS,oBAAUC,IAJpB;;;AAOA,GAAMC,gBAAiB,yCAAa,qBAAb,CAAoC,EAApC,iCAA8DlC,QAA9D,CAAvB,C;;AAE2BA,Q,CAAlBkC,c","file":"Checkbox.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity } from \"react-native\";\nimport IconNB from \"react-native-vector-icons/Ionicons\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\nimport { computeProps } from \"../Utils/computeProps\";\n\nclass CheckBox extends Component {\n\tstatic contextTypes = {\n\t\ttheme: PropTypes.object,\n\t};\n\n\tgetInitialStyle(variables) {\n\t\tconst bgColor = this.props.color ? this.props.color : variables.checkboxBgColor;\n\n\t\treturn {\n\t\t\tcheckStyle: {\n\t\t\t\tborderColor: this.props.color ? this.props.color : variables.checkboxBgColor,\n\t\t\t\tbackgroundColor: this.props.checked === true ? bgColor : \"transparent\",\n\t\t\t},\n\t\t};\n\t}\n\n\tprepareRootProps(variables) {\n\t\tconst defaultProps = {\n\t\t\tstyle: this.getInitialStyle(variables).checkStyle,\n\t\t};\n\n\t\treturn computeProps(this.props, defaultProps);\n\t}\n\trender() {\n\t\tconst variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\n\t\tconst platformStyle = variables.platformStyle;\n\t\tconst platform = variables.platform;\n\t\treturn (\n\t\t\t<TouchableOpacity ref={c => (this._root = c)} {...this.prepareRootProps(variables)}>\n\t\t\t\t<IconNB\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: this.props.checked === true ? variables.checkboxTickColor : \"transparent\",\n\t\t\t\t\t\tfontSize: variables.CheckboxFontSize,\n\t\t\t\t\t\tlineHeight: variables.CheckboxIconSize,\n\t\t\t\t\t}}\n\t\t\t\t\tname={platform === \"ios\" && platformStyle !== \"material\" ? \"ios-checkmark-outline\" : \"md-checkmark\"}\n\t\t\t\t/>\n\t\t\t</TouchableOpacity>\n\t\t);\n\t}\n}\n\nCheckBox.propTypes = {\n\t...TouchableOpacity.propTypes,\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n\tchecked: PropTypes.bool,\n\tonPress: PropTypes.func,\n};\n\nconst StyledCheckBox = connectStyle(\"NativeBase.CheckBox\", {}, mapPropsToStyleNames)(CheckBox);\n\nexport { StyledCheckBox as CheckBox };\n"]}