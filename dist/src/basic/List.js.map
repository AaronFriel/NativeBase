{"version":3,"sources":["../../../src/basic/List.js"],"names":["List","props","_rows","openCellId","dataArray","renderRow","rowHasChanged","r1","r2","ds","DataSource","state","dataSource","cloneWithRows","nextProps","setState","childrenArray","Children","map","children","child","enable","_listView","setNativeProps","scrollEnabled","_root","closeRow","id","closeOnRowBeginSwipe","safeCloseOpenRow","secId","rowId","rowMap","cellIdentifier","onRowOpen","_id","closeOnRowPress","e","closeOnScroll","onScroll","ref","listViewRef","rowData","_rowMap","previewRowId","getRowIDForFlatIndex","previewRowIndex","row","rowSwipeGestureBegan","onRowDidOpen","onRowClose","onRowDidClose","onRowPress","setScrollEnabled","leftOpenValue","rightOpenValue","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","recalculateHiddenLayout","swipeRowStyle","previewFirstRow","previewDuration","previewOpenValue","tension","friction","directionalDistanceChangeThreshold","swipeToOpenPercent","renderLeftHiddenRow","renderRightHiddenRow","_children","_closeOnRowBeginSwipe","_closeOnRowPress","_closeOnScroll","_dataSource","_directionalDistanceChangeThreshold","_disableLeftSwipe","_disableRightSwipe","_friction","_leftOpenValue","_listViewRef","_onRowClose","_onRowDidClose","_onRowDidOpen","_onRowOpen","_onScroll","_previewDuration","_previewFirstRow","_previewOpenValue","_previewRowIndex","_recalculateHiddenLayout","_renderLeftHiddenRow","_renderRightHiddenRow","_renderRow","_rightOpenValue","_stopLeftSwipe","_stopRightSwipe","_swipeRowStyle","_swipeToOpenPercent","_tension","passThruProps","setRefs","c","renderChildren","defaultProps","StyledList"],"mappings":"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","file":"List.js","sourcesContent":["import React, { Component } from 'react';\nimport { ListView, View } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport { SwipeRow } from './SwipeRow';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\nclass List extends Component {\n\tstatic defaultProps = {\n\t\tleftOpenValue: 0,\n\t\trightOpenValue: 0,\n\t\tcloseOnRowBeginSwipe: false,\n\t\tcloseOnScroll: true,\n\t\tcloseOnRowPress: true,\n\t\tdisableLeftSwipe: false,\n\t\tdisableRightSwipe: false,\n\t\trecalculateHiddenLayout: false,\n\t\tpreviewFirstRow: false,\n\t\tdirectionalDistanceChangeThreshold: 2,\n\t\tswipeToOpenPercent: 50,\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._rows = {};\n\t\tthis.openCellId = null;\n\t\tif (props.dataArray && props.renderRow) {\n\t\t\tconst rowHasChanged = props.rowHasChanged || ((r1, r2) => r1 !== r2);\n\t\t\tconst ds = new ListView.DataSource({ rowHasChanged });\n\t\t\tthis.state = {\n\t\t\t\tdataSource: ds.cloneWithRows(props.dataArray),\n\t\t\t};\n\t\t} else {\n\t\t\tthis.state = {};\n\t\t}\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.state.dataSource) {\n\t\t\tthis.setState({\n\t\t\t\tdataSource: this.state.dataSource.cloneWithRows(nextProps.dataArray),\n\t\t\t});\n\t\t}\n\t}\n\trenderChildren() {\n\t\tconst childrenArray = React.Children.map(this.props.children, child => child);\n\n\t\treturn childrenArray;\n\t}\n\tsetScrollEnabled(enable) {\n\t\tthis._listView.setNativeProps({ scrollEnabled: enable });\n\t}\n\n\tsafeCloseOpenRow() {\n\t\t// if the openCellId is stale due to deleting a row this could be undefined\n\t\tif (this._rows[this.openCellId]._root) {\n\t\t\tthis._rows[this.openCellId]._root.closeRow();\n\t\t}\n\t}\n\n\trowSwipeGestureBegan(id) {\n\t\tif (this.props.closeOnRowBeginSwipe && this.openCellId && this.openCellId !== id) {\n\t\t\tthis.safeCloseOpenRow();\n\t\t}\n\t}\n\n\tonRowOpen(secId, rowId, rowMap) {\n\t\tconst cellIdentifier = `${secId}${rowId}`;\n\t\tif (this.openCellId && this.openCellId !== cellIdentifier) {\n\t\t\tthis.safeCloseOpenRow();\n\t\t}\n\t\tthis.openCellId = cellIdentifier;\n\t\tif (this.props.onRowOpen) {\n\t\t\tthis.props.onRowOpen(secId, rowId, rowMap);\n\t\t}\n\t}\n\n\tonRowPress(_id) {\n\t\tif (this.openCellId) {\n\t\t\tif (this.props.closeOnRowPress) {\n\t\t\t\tthis.safeCloseOpenRow();\n\t\t\t\tthis.openCellId = null;\n\t\t\t}\n\t\t}\n\t}\n\tcloseRow(_id) {\n\t\tif (this.openCellId) {\n\t\t\tif (this.props.closeOnRowPress) {\n\t\t\t\tthis.safeCloseOpenRow();\n\t\t\t\tthis.openCellId = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tonScroll(e) {\n\t\tif (this.openCellId) {\n\t\t\tif (this.props.closeOnScroll) {\n\t\t\t\tthis.safeCloseOpenRow();\n\t\t\t\tthis.openCellId = null;\n\t\t\t}\n\t\t}\n\t\tif (this.props.onScroll) {\n\t\t\tthis.props.onScroll(e);\n\t\t}\n\t}\n\n\tsetRefs(ref) {\n\t\tthis._listView = ref;\n\t\tif (this.props.listViewRef) {\n\t\t\tthis.props.listViewRef(ref);\n\t\t}\n\t}\n\n\trenderRow(rowData, secId, rowId, _rowMap) {\n\t\tconst previewRowId =\n\t\t\tthis.props.dataSource\n\t\t\t&& this.props.dataSource.getRowIDForFlatIndex(this.props.previewRowIndex || 0);\n\t\treturn (\n\t\t\t<SwipeRow\n\t\t\t\tlist\n\t\t\t\tref={row => (this._rows[`${secId}${rowId}`] = row)}\n\t\t\t\tswipeGestureBegan={_ => this.rowSwipeGestureBegan(`${secId}${rowId}`)}\n\t\t\t\tonRowOpen={_ => this.onRowOpen(secId, rowId, this._rows)}\n        onRowDidOpen={_ =>\n          this.props.onRowDidOpen &&\n          this.props.onRowDidOpen(secId, rowId, this._rows)\n        }\n        onRowClose={_ =>\n          this.props.onRowClose &&\n          this.props.onRowClose(secId, rowId, this._rows)\n        }\n        onRowDidClose={_ =>\n          this.props.onRowDidClose &&\n          this.props.onRowDidClose(secId, rowId, this._rows)\n        }\n\t\t\t\tonRowPress={_ => this.onRowPress(`${secId}${rowId}`)}\n\t\t\t\tcloseRow={_ => this.closeRow(`${secId}${rowId}`)}\n\t\t\t\tsetScrollEnabled={enable => this.setScrollEnabled(enable)}\n\t\t\t\tleftOpenValue={this.props.leftOpenValue}\n\t\t\t\trightOpenValue={this.props.rightOpenValue}\n\t\t\t\tcloseOnRowPress={this.props.closeOnRowPress}\n\t\t\t\tdisableLeftSwipe={this.props.disableLeftSwipe}\n\t\t\t\tdisableRightSwipe={this.props.disableRightSwipe}\n\t\t\t\tstopLeftSwipe={this.props.stopLeftSwipe}\n\t\t\t\tstopRightSwipe={this.props.stopRightSwipe}\n\t\t\t\trecalculateHiddenLayout={this.props.recalculateHiddenLayout}\n\t\t\t\tstyle={this.props.swipeRowStyle}\n\t\t\t\tpreview={\n\t\t\t\t\t(this.props.previewFirstRow || this.props.previewRowIndex) &&\n\t\t\t\t\trowId === previewRowId\n\t\t\t\t}\n\t\t\t\tpreviewDuration={this.props.previewDuration}\n\t\t\t\tpreviewOpenValue={this.props.previewOpenValue}\n\t\t\t\ttension={this.props.tension}\n\t\t\t\tfriction={this.props.friction}\n\t\t\t\tdirectionalDistanceChangeThreshold={this.props.directionalDistanceChangeThreshold}\n\t\t\t\tswipeToOpenPercent={this.props.swipeToOpenPercent}\n\t\t\t\tleft={this.props.renderLeftHiddenRow(rowData, secId, rowId, this._rows)}\n\t\t\t\tright={this.props.renderRightHiddenRow(rowData, secId, rowId, this._rows)}\n\t\t\t\tbody={this.props.renderRow(rowData, secId, rowId, this._rows)}\n\t\t\t/>\n\t\t);\n\t}\n\trender() {\n\t\tconst {\n\t\t\tchildren: _children,\n\t\t\tcloseOnRowBeginSwipe: _closeOnRowBeginSwipe,\n\t\t\tcloseOnRowPress: _closeOnRowPress,\n\t\t\tcloseOnScroll: _closeOnScroll,\n\t\t\tdataSource: _dataSource,\n\t\t\tdirectionalDistanceChangeThreshold: _directionalDistanceChangeThreshold,\n\t\t\tdisableLeftSwipe: _disableLeftSwipe,\n\t\t\tdisableRightSwipe: _disableRightSwipe,\n\t\t\tfriction: _friction,\n\t\t\tleftOpenValue: _leftOpenValue,\n\t\t\tlistViewRef: _listViewRef,\n\t\t\tonRowClose: _onRowClose,\n\t\t\tonRowDidClose: _onRowDidClose,\n\t\t\tonRowDidOpen: _onRowDidOpen,\n\t\t\tonRowOpen: _onRowOpen,\n\t\t\tonScroll: _onScroll,\n\t\t\tpreviewDuration: _previewDuration,\n\t\t\tpreviewFirstRow: _previewFirstRow,\n\t\t\tpreviewOpenValue: _previewOpenValue,\n\t\t\tpreviewRowIndex: _previewRowIndex,\n\t\t\trecalculateHiddenLayout: _recalculateHiddenLayout,\n\t\t\trenderLeftHiddenRow: _renderLeftHiddenRow,\n\t\t\trenderRightHiddenRow: _renderRightHiddenRow,\n\t\t\trenderRow: _renderRow,\n\t\t\trightOpenValue: _rightOpenValue,\n\t\t\tstopLeftSwipe: _stopLeftSwipe,\n\t\t\tstopRightSwipe: _stopRightSwipe,\n\t\t\tswipeRowStyle: _swipeRowStyle,\n\t\t\tswipeToOpenPercent: _swipeToOpenPercent,\n\t\t\ttension: _tension,\n\t\t\t...passThruProps\n\t\t} = this.props;\n\n\t\tif (this.props.renderLeftHiddenRow || this.props.renderRightHiddenRow) {\n\t\t\treturn (\n\t\t\t\t<ListView\n\t\t\t\t\t{...passThruProps}\n\t\t\t\t\tref={(ref) => {\n\t\t\t\t\t\tthis.setRefs(ref);\n\t\t\t\t\t\tthis._root = ref;\n\t\t\t\t\t}}\n\t\t\t\t\tonScroll={e => this.onScroll(e)}\n\t\t\t\t\trenderRow={(rowData, secId, rowId) => this.renderRow(rowData, secId, rowId, this._rows)}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (this.state.dataSource) {\n\t\t\treturn (\n\t\t\t\t<ListView\n\t\t\t\t\t{...passThruProps}\n\t\t\t\t\tref={ref => (this._root = ref)}\n\t\t\t\t\tenableEmptySections\n\t\t\t\t\tdataSource={this.state.dataSource}\n\t\t\t\t\trenderRow={this.props.renderRow}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<View ref={c => (this._root = c)} {...passThruProps}>\n\t\t\t\t{this.renderChildren()}\n\t\t\t</View>\n\t\t);\n\t}\n}\nconst StyledList = connectStyle('NativeBase.List', {}, mapPropsToStyleNames)(List);\n\nexport { StyledList as List };\n"]}