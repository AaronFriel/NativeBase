{"version":3,"sources":["../../../src/basic/ListItem.js"],"names":["ListItem","variables","context","theme","props","_androidRippleColor","androidRippleColor","_avatar","avatar","_button","button","_first","first","_header","header","_icon","icon","_iconLeft","iconLeft","_iconRight","iconRight","_itemDivider","itemDivider","_itemHeader","itemHeader","_last","last","_noBorder","noBorder","_note","note","_selected","selected","passThruProps","OS","androidRipple","onPress","onLongPress","Version","_root","c","listBtnUnderlayColor","children","Ripple","androidRippleColorDark","marginLeft","paddingLeft","contextTypes","object","propTypes","style","oneOfType","number","array","bool","StyledListItem"],"mappings":"21BAAA,4B;AACA,qC;AACA;;AAEA;AACA,mE;AACA,qD;;AAEMA,Q;;;;AAII;AACR,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CAAqB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAtE,mBAAlB,CADQ;;;;;;;;;;;;;;;;;;AAmBJ,KAAKG,KAnBD,CAIaC,mBAJb,QAIPC,kBAJO,CAKCC,OALD,QAKPC,MALO,CAMCC,OAND,QAMPC,MANO,CAOAC,MAPA,QAOPC,KAPO,CAQCC,OARD,QAQPC,MARO,CASDC,KATC,QASPC,IATO,CAUGC,SAVH,QAUPC,QAVO,CAWIC,UAXJ,QAWPC,SAXO,CAYMC,YAZN,QAYPC,WAZO,CAaKC,WAbL,QAaPC,UAbO,CAcDC,KAdC,QAcPC,IAdO,CAeGC,SAfH,QAePC,QAfO,CAgBDC,KAhBC,QAgBPC,IAhBO,CAiBGC,SAjBH,QAiBPC,QAjBO,CAkBJC,aAlBI;;AAqBR;AACC,sBAASC,EAAT,GAAgB,KAAhB;AACAjC,UAAUkC,aAAV,GAA4B,KAD5B;AAEC,CAAC,KAAK/B,KAAL,CAAWgC,OAAZ,EAAuB,CAAC,KAAKhC,KAAL,CAAWiC,WAFpC;AAGA,sBAASC,OAAT,EAAoB,EAJrB;AAKE;AACD;AACC;AACC,QAAS,KAAKlC,KAAL,CAAWgC,OADrB;AAEC,YAAa,KAAKhC,KAAL,CAAWiC,WAFzB;AAGC,IAAK,sBAAM,QAAKE,KAAL,CAAaC,CAAnB,EAHN;AAIC,cAAevC,UAAUwC,oBAJ1B;;AAMC,4DAAUR,aAAV;AACE,KAAK7B,KAAL,CAAWsC,QADb,CAND,CADD;;;;AAYA,CAlBD,IAkBO;AACN;AACC;AACC,IAAK,sBAAM,QAAKH,KAAL,CAAaC,CAAnB,EADN;AAEC,QAAS,KAAKpC,KAAL,CAAWgC,OAFrB;AAGC,YAAa,KAAKhC,KAAL,CAAWiC,WAHzB;AAIC;AACC,KAAKjC,KAAL,CAAWE,kBAAX;AACG,qCAAwBqC,MAAxB,CAA+B,KAAKvC,KAAL,CAAWE,kBAA1C,CADH;AAEG,qCAAwBqC,MAAxB,CAA+B1C,UAAU2C,sBAAzC,CAPL;;;AAUC,iDAAM,MAAO,CAAEC,WAAY,CAAC,EAAf,CAAmBC,YAAa,EAAhC,CAAb;AACC,4DAAUb,aAAV;AACE,KAAK7B,KAAL,CAAWsC,QADb,CADD,CAVD,CADD;;;;;AAkBA;AACD,C,wCA/DI1C,Q,CACE+C,Y,CAAe,CACrB5C,MAAO,oBAAU6C,MADI,C;;;AAiEvBhD,SAASiD,SAAT;AACI,gCAAmBA,SADvB;AAECC,MAAO,oBAAUC,SAAV,CAAoB,CAAC,oBAAUH,MAAX,CAAmB,oBAAUI,MAA7B,CAAqC,oBAAUC,KAA/C,CAApB,CAFR;AAGC/B,YAAa,oBAAUgC,IAHxB;AAIC5C,OAAQ,oBAAU4C,IAJnB;;;AAOA,GAAMC,gBAAiB,yCAAa,qBAAb,CAAoC,EAApC,iCAA8DvD,QAA9D,CAAvB,C;;AAE2BA,Q,CAAlBuD,c","file":"ListItem.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TouchableHighlight, Platform, TouchableNativeFeedback, View } from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\n\nclass ListItem extends Component {\n\tstatic contextTypes = {\n\t\ttheme: PropTypes.object,\n\t};\n\trender() {\n\t\tconst variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\n\n\t\tconst {\n\t\t\tandroidRippleColor: _androidRippleColor,\n\t\t\tavatar: _avatar,\n\t\t\tbutton: _button,\n\t\t\tfirst: _first,\n\t\t\theader: _header,\n\t\t\ticon: _icon,\n\t\t\ticonLeft: _iconLeft,\n\t\t\ticonRight: _iconRight,\n\t\t\titemDivider: _itemDivider,\n\t\t\titemHeader: _itemHeader,\n\t\t\tlast: _last,\n\t\t\tnoBorder: _noBorder,\n\t\t\tnote: _note,\n\t\t\tselected: _selected,\n\t\t\t...passThruProps,\n\t\t} = this.props;\n\n\t\tif (\n\t\t\tPlatform.OS === \"ios\" ||\n\t\t\tvariables.androidRipple === false ||\n\t\t\t(!this.props.onPress && !this.props.onLongPress) ||\n\t\t\tPlatform.Version <= 21\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<TouchableHighlight\n\t\t\t\t\tonPress={this.props.onPress}\n\t\t\t\t\tonLongPress={this.props.onLongPress}\n\t\t\t\t\tref={c => (this._root = c)}\n\t\t\t\t\tunderlayColor={variables.listBtnUnderlayColor}\n\t\t\t\t>\n\t\t\t\t\t<View {...passThruProps}>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableHighlight>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<TouchableNativeFeedback\n\t\t\t\t\tref={c => (this._root = c)}\n\t\t\t\t\tonPress={this.props.onPress}\n\t\t\t\t\tonLongPress={this.props.onLongPress}\n\t\t\t\t\tbackground={\n\t\t\t\t\t\tthis.props.androidRippleColor\n\t\t\t\t\t\t\t? TouchableNativeFeedback.Ripple(this.props.androidRippleColor)\n\t\t\t\t\t\t\t: TouchableNativeFeedback.Ripple(variables.androidRippleColorDark)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<View style={{ marginLeft: -17, paddingLeft: 17 }}>\n\t\t\t\t\t\t<View {...passThruProps}>\n\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableNativeFeedback>\n\t\t\t);\n\t\t}\n\t}\n}\n\nListItem.propTypes = {\n\t...TouchableHighlight.propTypes,\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n\titemDivider: PropTypes.bool,\n\tbutton: PropTypes.bool,\n};\n\nconst StyledListItem = connectStyle(\"NativeBase.ListItem\", {}, mapPropsToStyleNames)(ListItem);\n\nexport { StyledListItem as ListItem };\n"]}