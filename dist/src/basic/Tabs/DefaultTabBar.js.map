{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["DefaultTabBar","propTypes","goToPage","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","tabStyle","style","renderTab","underlineStyle","tabContainerStyle","contextTypes","theme","object","getDefaultProps","topTabBarActiveTextColor","topTabBarTextColor","renderTabOption","_name","_page","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","props","children","undefined","flex","random","render","variables","context","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","map","StyledTab"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport { Animated } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport _ from \"lodash\";\n\nimport mapPropsToStyleNames from \"../../Utils/mapPropsToStyleNames\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\nimport { ViewPropTypes } from \"../../Utils\";\nimport { Button } from \"../Button\";\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style,\n  },\n  contextTypes: {\n    theme: PropTypes.object,\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      backgroundColor: null,\n    };\n  },\n\n  renderTabOption(_name, _page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle\n  ) {\n    const headerContent = typeof name !== \"string\" ? name.props.children : undefined;\n    if (typeof name === \"string\") {\n      return (\n        <Button style={{ flex: 1 }} key={name} onPress={() => onPressHandler(page)}>\n          <TabHeading style={isTabActive ? activeTabStyle : tabStyle} active={isTabActive}>\n            <Text style={isTabActive ? activeTextStyle : textStyle}>{name}</Text>\n          </TabHeading>\n        </Button>\n      );\n    } else {\n      return (\n        <Button style={{ flex: 1 }} key={_.random(1.2, 5.2)} onPress={() => onPressHandler(page)}>\n          <TabHeading style={tabHeaderStyle} active={isTabActive}>\n            {headerContent}\n          </TabHeading>\n        </Button>\n      );\n    }\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0,\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs],\n    });\n    return (\n      <TabContainer style={this.props.tabContainerStyle ? this.props.tabContainerStyle : {}}>\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page]\n          );\n        })}\n        <Animated.View style={[tabUnderlineStyle, { left }, this.props.underlineStyle]} />\n      </TabContainer>\n    );\n  },\n});\n\nconst StyledTab = connectStyle(\"NativeBase.DefaultTabBar\", {}, mapPropsToStyleNames)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]}