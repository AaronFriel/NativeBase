{"version":3,"sources":["../../../src/basic/SwipeRow.js"],"names":["PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","styles","container","hidden","bottom","left","overflow","position","right","top","SwipeRow","props","horizontalSwipeGestureBegan","swipeInitialX","parentScrollEnabled","ranPreview","state","dimensionsSet","hiddenHeight","hiddenWidth","_translateX","Value","_panResponder","create","onMoveShouldSetPanResponder","e","gs","handleOnMoveShouldSetPanResponder","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminate","onShouldBlockNativeResponder","toValue","delay","timing","duration","previewDuration","setState","recalculateHiddenLayout","nativeEvent","layout","height","width","preview","previewOpenValue","rightOpenValue","getPreviewAnimation","start","_","dx","Math","abs","directionalDistanceChangeThreshold","gestureState","dy","absDx","absDy","setScrollEnabled","_value","swipeGestureBegan","newDX","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","setValue","_e","_gestureState","xTranslation","swipeThreshold","swipeToOpenPercent","leftOpenValue","manuallySwipeRow","spring","friction","tension","onRowDidClose","onRowDidOpen","onRowClose","onRowOpen","panHandlers","transform","translateX","zIndex","list","body","backgroundColor","onContentLayout","style","undefined","flex","flexDirection","justifyContent","renderMainContent","defaultProps","closeOnRowPress","StyledSwipeRow"],"mappings":"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","file":"SwipeRow.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Animated, PanResponder, View } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { ListItem } from \"./ListItem\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nconst PREVIEW_OPEN_DELAY = 700;\nconst PREVIEW_CLOSE_DELAY = 300;\n\nconst styles = {\n\tcontainer: {\n\t\t// As of RN 0.29 flex: 1 is causing all rows to be the same height\n\t\t// flex: 1\n\t},\n\thidden: {\n\t\tbottom: 0,\n\t\tleft: 0,\n\t\toverflow: \"hidden\",\n\t\tposition: \"absolute\",\n\t\tright: 0,\n\t\ttop: 0,\n\t},\n};\n\nclass SwipeRow extends Component {\n\tstatic defaultProps = {\n\t\tleftOpenValue: 0,\n\t\trightOpenValue: 0,\n\t\tcloseOnRowPress: true,\n\t\tdisableLeftSwipe: false,\n\t\tdisableRightSwipe: false,\n\t\trecalculateHiddenLayout: false,\n\t\tpreview: false,\n\t\tpreviewDuration: 300,\n\t\tdirectionalDistanceChangeThreshold: 2,\n\t\tswipeToOpenPercent: 50,\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.horizontalSwipeGestureBegan = false;\n\t\tthis.swipeInitialX = null;\n\t\tthis.parentScrollEnabled = true;\n\t\tthis.ranPreview = false;\n\t\tthis.state = {\n\t\t\tdimensionsSet: false,\n\t\t\thiddenHeight: 0,\n\t\t\thiddenWidth: 0,\n\t\t};\n\t\tthis._translateX = new Animated.Value(0);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis._panResponder = PanResponder.create({\n\t\t\tonMoveShouldSetPanResponder: (e, gs) => this.handleOnMoveShouldSetPanResponder(e, gs),\n\t\t\tonPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\n\t\t\tonPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\n\t\t\tonPanResponderTerminate: (e, gs) => this.handlePanResponderEnd(e, gs),\n\t\t\tonShouldBlockNativeResponder: _ => false,\n\t\t});\n\t}\n\n\tgetPreviewAnimation(toValue, delay) {\n\t\treturn Animated.timing(this._translateX, {\n\t\t\tduration: this.props.previewDuration,\n\t\t\ttoValue,\n\t\t\tdelay\n\t\t});\n\t}\n\n\tonContentLayout(e) {\n\t\tthis.setState({\n\t\t\tdimensionsSet: !this.props.recalculateHiddenLayout,\n\t\t\thiddenHeight: e.nativeEvent.layout.height,\n\t\t\thiddenWidth: e.nativeEvent.layout.width,\n\t\t});\n\n\t\tif (this.props.preview && !this.ranPreview) {\n\t\t\tthis.ranPreview = true;\n\t\t\tconst previewOpenValue = this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n\t\t\tthis.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start((_) => {\n\t\t\t\tthis.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n\t\t\t});\n\t\t}\n\t}\n\n\thandleOnMoveShouldSetPanResponder(e, gs) {\n\t\tconst { dx } = gs;\n\t\treturn Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n\t}\n\n\thandlePanResponderMove(e, gestureState) {\n\t\tconst { dx, dy } = gestureState;\n\t\tconst absDx = Math.abs(dx);\n\t\tconst absDy = Math.abs(dy);\n\n\t\t// this check may not be necessary because we don't capture the move until we pass the threshold\n\t\t// just being extra safe here\n\t\tif (\n\t\t\tabsDx > this.props.directionalDistanceChangeThreshold ||\n\t\t\tabsDy > this.props.directionalDistanceChangeThreshold\n\t\t) {\n\t\t\t// we have enough to determine direction\n\t\t\tif (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n\t\t\t\t// user is moving vertically, do nothing, listView will handle\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// user is moving horizontally\n\t\t\tif (this.parentScrollEnabled) {\n\t\t\t\t// disable scrolling on the listView parent\n\t\t\t\tthis.parentScrollEnabled = false;\n\t\t\t\tif (this.props.setScrollEnabled) {\n\t\t\t\t\tthis.props.setScrollEnabled(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.swipeInitialX === null) {\n\t\t\t\t// set tranlateX value when user started swiping\n\t\t\t\tthis.swipeInitialX = this._translateX._value;\n\t\t\t}\n\t\t\tif (!this.horizontalSwipeGestureBegan) {\n\t\t\t\tthis.horizontalSwipeGestureBegan = true;\n\t\t\t\tif (this.props.swipeGestureBegan) {\n\t\t\t\t\tthis.props.swipeGestureBegan();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet newDX = this.swipeInitialX + dx;\n\t\t\tif (this.props.disableLeftSwipe && newDX < 0) {\n\t\t\t\tnewDX = 0;\n\t\t\t}\n\t\t\tif (this.props.disableRightSwipe && newDX > 0) {\n\t\t\t\tnewDX = 0;\n\t\t\t}\n\n\t\t\tif (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n\t\t\t\tnewDX = this.props.stopLeftSwipe;\n\t\t\t}\n\t\t\tif (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\n\t\t\t\tnewDX = this.props.stopRightSwipe;\n\t\t\t}\n\n\t\t\tthis._translateX.setValue(newDX);\n\t\t}\n\t}\n\n\thandlePanResponderEnd(_e, _gestureState) {\n\t\t// re-enable scrolling on listView parent\n\t\tif (!this.parentScrollEnabled) {\n\t\t\tthis.parentScrollEnabled = true;\n\t\t\tif (this.props.setScrollEnabled) {\n\t\t\t\tthis.props.setScrollEnabled(true);\n\t\t\t}\n\t\t}\n\n\t\t// finish up the animation\n\t\tlet toValue = 0;\n\t\tconst xTranslation = this._translateX._value;\n\t\tconst swipeThreshold = (this.props.swipeToOpenPercent / 100);\n\t\tif (xTranslation >= 0 && xTranslation > this.props.leftOpenValue * swipeThreshold) {\n\t\t\t// trying to open right && we're more than halfway\n\t\t\ttoValue = this.props.leftOpenValue;\n\t\t} else if (xTranslation < this.props.rightOpenValue * swipeThreshold) {\n\t\t\t// (trying to open left) we're more than halfway\n\t\t\ttoValue = this.props.rightOpenValue;\n\t\t}\n\n\t\tthis.manuallySwipeRow(toValue);\n\t}\n\n\t/*\n\t * This method is called by SwipeListView\n\t */\n\tcloseRow() {\n\t\tthis.manuallySwipeRow(0);\n\t}\n\n\tmanuallySwipeRow(toValue) {\n\t\tAnimated.spring(this._translateX, {\n\t\t\ttoValue,\n\t\t\tfriction: this.props.friction,\n\t\t\ttension: this.props.tension,\n\t\t}).start((_) => {\n\t\t\tif (toValue === 0 && this.props.onRowDidClose) {\n\t\t\t\tthis.props.onRowDidClose();\n\t\t\t} else if (this.props.onRowDidOpen) {\n\t\t\t\tthis.props.onRowDidOpen();\n\t\t\t}\n\t\t});\n\n\t\tif (toValue === 0 && this.props.onRowClose) {\n\t\t\tthis.props.onRowClose();\n\t\t} else if (this.props.onRowOpen) {\n\t\t\tthis.props.onRowOpen(toValue);\n\t\t}\n\n\t\t// reset everything\n\t\tthis.swipeInitialX = null;\n\t\tthis.horizontalSwipeGestureBegan = false;\n\t}\n\n\trenderMainContent() {\n\t\t// We do this annoying if statement for performance.\n\t\t// We don't want the onLayout func to run after it runs once.\n\t\tif (this.state.dimensionsSet) {\n\t\t\treturn (\n\t\t\t\t<Animated.View\n\t\t\t\t\t{...this._panResponder.panHandlers}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransform: [{ translateX: this._translateX }],\n\t\t\t\t\t\tzIndex: 2,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{!this.props.list\n\t\t\t\t\t\t? <ListItem list>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t: <View style={{ backgroundColor: '#FFF' }}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</View>}\n\t\t\t\t</Animated.View>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Animated.View\n\t\t\t\t\t{...this._panResponder.panHandlers}\n\t\t\t\t\tonLayout={e => this.onContentLayout(e)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransform: [{ translateX: this._translateX }],\n\t\t\t\t\t\tzIndex: 2,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{!this.props.list\n\t\t\t\t\t\t? <ListItem list>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t: <View style={{ backgroundColor: '#FFF' }}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</View>}\n\t\t\t\t</Animated.View>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={this.props.style ? this.props.style : undefined}>\n\t\t\t\t<View\n\t\t\t\t\tstyle={[\n\t\t\t\t\t\tstyles.hidden,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\theight: this.state.hiddenHeight,\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t<Left style={{ width: this.props.leftOpenValue, zIndex: 1 }}>\n\t\t\t\t\t\t{this.props.left}\n\t\t\t\t\t</Left>\n\t\t\t\t\t<Body style={{ flex: 0 }} />\n\t\t\t\t\t<Right style={{ width: -this.props.rightOpenValue, zIndex: 1 }}>\n\t\t\t\t\t\t{this.props.right}\n\t\t\t\t\t</Right>\n\t\t\t\t</View>\n\t\t\t\t{this.renderMainContent()}\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst StyledSwipeRow = connectStyle(\"NativeBase.SwipeRow\", {}, mapPropsToStyleNames)(SwipeRow);\nexport { StyledSwipeRow as SwipeRow };\n"]}